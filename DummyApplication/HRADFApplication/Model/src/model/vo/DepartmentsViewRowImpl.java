package model.vo;

import model.eo.DepartmentsImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.RowIterator;
import oracle.jbo.RowSet;
import oracle.jbo.server.ViewRowImpl;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Sun Sep 09 23:59:51 BST 2018
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class DepartmentsViewRowImpl
  extends ViewRowImpl
{

  public static final int ENTITY_DEPARTMENTS = 0;

  /**
   * AttributesEnum: generated enum for identifying attributes and accessors. DO NOT MODIFY.
   */
  protected enum AttributesEnum
  {
    DepartmentId,
    DepartmentName,
    ManagerId,
    LocationId,
    TLocationName,
    TFirstName,
    TLastName,
    EmployeesView,
    LOVLocationsView1,
    LOVEmployeesView1;
    private static AttributesEnum[] vals = null;
    ;
    private static final int firstIndex = 0;

    protected int index()
    {
      return AttributesEnum.firstIndex() + ordinal();
    }

    protected static final int firstIndex()
    {
      return firstIndex;
    }

    protected static int count()
    {
      return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
    }

    protected static final AttributesEnum[] staticValues()
    {
      if (vals == null)
      {
        vals = AttributesEnum.values();
      }
      return vals;
    }
  }

  public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
  public static final int DEPARTMENTNAME = AttributesEnum.DepartmentName.index();
  public static final int MANAGERID = AttributesEnum.ManagerId.index();
  public static final int LOCATIONID = AttributesEnum.LocationId.index();
  public static final int TLOCATIONNAME = AttributesEnum.TLocationName.index();
  public static final int TFIRSTNAME = AttributesEnum.TFirstName.index();
  public static final int TLASTNAME = AttributesEnum.TLastName.index();
  public static final int EMPLOYEESVIEW = AttributesEnum.EmployeesView.index();
  public static final int LOVLOCATIONSVIEW1 = AttributesEnum.LOVLocationsView1.index();
  public static final int LOVEMPLOYEESVIEW1 = AttributesEnum.LOVEmployeesView1.index();

  /**
   * This is the default constructor (do not remove).
   */
  public DepartmentsViewRowImpl()
  {
  }

  /**
   * Gets Departments entity object.
   * @return the Departments
   */
  public DepartmentsImpl getDepartments()
  {
    return (DepartmentsImpl) getEntity(ENTITY_DEPARTMENTS);
  }

  /**
   * Gets the attribute value for DEPARTMENT_ID using the alias name DepartmentId.
   * @return the DEPARTMENT_ID
   */
  public Integer getDepartmentId()
  {
    return (Integer) getAttributeInternal(DEPARTMENTID);
  }

  /**
   * Sets <code>value</code> as attribute value for DEPARTMENT_ID using the alias name DepartmentId.
   * @param value value to set the DEPARTMENT_ID
   */
  public void setDepartmentId(Integer value)
  {
    setAttributeInternal(DEPARTMENTID, value);
  }

  /**
   * Gets the attribute value for DEPARTMENT_NAME using the alias name DepartmentName.
   * @return the DEPARTMENT_NAME
   */
  public String getDepartmentName()
  {
    return (String) getAttributeInternal(DEPARTMENTNAME);
  }

  /**
   * Sets <code>value</code> as attribute value for DEPARTMENT_NAME using the alias name DepartmentName.
   * @param value value to set the DEPARTMENT_NAME
   */
  public void setDepartmentName(String value)
  {
    setAttributeInternal(DEPARTMENTNAME, value);
    setManagerId(100);
  }

  /**
   * Gets the attribute value for MANAGER_ID using the alias name ManagerId.
   * @return the MANAGER_ID
   */
  public Integer getManagerId()
  {
    return (Integer) getAttributeInternal(MANAGERID);
  }

  @Override
  protected void create(AttributeList attributeList)
  {
    // TODO Implement this method
    super.create(attributeList);
    
  }

  @Override
  public void remove()
  {
    // TODO Implement this method
    super.remove();
    
  }

  /**
   * Sets <code>value</code> as attribute value for MANAGER_ID using the alias name ManagerId.
   * @param value value to set the MANAGER_ID
   */
  public void setManagerId(Integer value)
  {
    setAttributeInternal(MANAGERID, value);
  }

  /**
   * Gets the attribute value for LOCATION_ID using the alias name LocationId.
   * @return the LOCATION_ID
   */
  public Integer getLocationId()
  {
    return (Integer) getAttributeInternal(LOCATIONID);
  }

  /**
   * Sets <code>value</code> as attribute value for LOCATION_ID using the alias name LocationId.
   * @param value value to set the LOCATION_ID
   */
  public void setLocationId(Integer value)
  {
    setAttributeInternal(LOCATIONID, value);
  }

  /**
   * Gets the attribute value for the calculated attribute TLocationName.
   * @return the TLocationName
   */
  public String getTLocationName()
  {
    return (String) getAttributeInternal(TLOCATIONNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute TLocationName.
   * @param value value to set the  TLocationName
   */
  public void setTLocationName(String value)
  {
    setAttributeInternal(TLOCATIONNAME, value);
  }

  /**
   * Gets the attribute value for the calculated attribute TFirstName.
   * @return the TFirstName
   */
  public String getTFirstName()
  {
    return (String) getAttributeInternal(TFIRSTNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute TFirstName.
   * @param value value to set the  TFirstName
   */
  public void setTFirstName(String value)
  {
    setAttributeInternal(TFIRSTNAME, value);
  }

  /**
   * Gets the attribute value for the calculated attribute TLastName.
   * @return the TLastName
   */
  public String getTLastName()
  {
    return (String) getAttributeInternal(TLASTNAME);
  }

  /**
   * Sets <code>value</code> as the attribute value for the calculated attribute TLastName.
   * @param value value to set the  TLastName
   */
  public void setTLastName(String value)
  {
    setAttributeInternal(TLASTNAME, value);
  }

  /**
   * Gets the associated <code>RowIterator</code> using master-detail link EmployeesView.
   */
  public RowIterator getEmployeesView()
  {
    return (RowIterator) getAttributeInternal(EMPLOYEESVIEW);
  }

  /**
   * Gets the view accessor <code>RowSet</code> LOVLocationsView1.
   */
  public RowSet getLOVLocationsView1()
  {
    return (RowSet) getAttributeInternal(LOVLOCATIONSVIEW1);
  }

  /**
   * Gets the view accessor <code>RowSet</code> LOVEmployeesView1.
   */
  public RowSet getLOVEmployeesView1()
  {
    return (RowSet) getAttributeInternal(LOVEMPLOYEESVIEW1);
  }
}

